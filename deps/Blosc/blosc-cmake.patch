--- ../c-blosc-1.17.0_tm/CMakeLists.txt	2021-03-24 11:54:37
+++ ./CMakeLists.txt	2023-02-25 11:00:44
@@ -172,17 +172,22 @@
   set(CMAKE_MACOSX_RPATH TRUE)
 endif()
 
+set(_target_arch ${CMAKE_SYSTEM_PROCESSOR})
+if(CMAKE_OSX_ARCHITECTURES)
+    set(_target_arch ${CMAKE_OSX_ARCHITECTURES})
+endif()
+
 # Based on the target system's processor and the compiler being used,
 # set build variables indicating which hardware features can be targeted
 # by the compiler. Note we DO NOT check which hardware features are supported
 # by this (the host) system, because we want to be able to support compiling
 # for newer hardware on older machines as well as cross-compilation.
-message(STATUS "Building for system processor ${CMAKE_SYSTEM_PROCESSOR}")
-if(CMAKE_SYSTEM_PROCESSOR STREQUAL i386 OR
-   CMAKE_SYSTEM_PROCESSOR STREQUAL i686 OR
-   CMAKE_SYSTEM_PROCESSOR STREQUAL x86_64 OR
-   CMAKE_SYSTEM_PROCESSOR STREQUAL amd64 OR
-   CMAKE_SYSTEM_PROCESSOR STREQUAL AMD64)
+message(STATUS "Building for system processor ${_target_arch}")
+if(_target_arch STREQUAL i386 OR
+   _target_arch STREQUAL i686 OR
+   _target_arch STREQUAL x86_64 OR
+   _target_arch STREQUAL amd64 OR
+   _target_arch STREQUAL AMD64)
     if(CMAKE_C_COMPILER_ID STREQUAL GNU)
         # We need C99 (GNU99 more exactly)
         SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -std=gnu99")
@@ -192,7 +197,7 @@
         else()
             set(COMPILER_SUPPORT_AVX2 FALSE)
         endif()
-    elseif(CMAKE_C_COMPILER_ID MATCHES Clang)
+    elseif(CMAKE_C_COMPILER_ID STREQUAL Clang)
         set(COMPILER_SUPPORT_SSE2 TRUE)
         if(CMAKE_C_COMPILER_VERSION VERSION_GREATER 3.2 OR CMAKE_C_COMPILER_VERSION VERSION_EQUAL 3.2)
             set(COMPILER_SUPPORT_AVX2 TRUE)
@@ -217,12 +222,14 @@
         set(COMPILER_SUPPORT_SSE2 FALSE)
         set(COMPILER_SUPPORT_AVX2 FALSE)
         # Unrecognized compiler. Emit a warning message to let the user know hardware-acceleration won't be available.
-        message(WARNING "Unable to determine which ${CMAKE_SYSTEM_PROCESSOR} hardware features are supported by the C compiler (${CMAKE_C_COMPILER_ID} ${CMAKE_C_COMPILER_VERSION}).")
+        message(WARNING "Unable to determine which ${_target_arch} hardware features are supported by the C compiler (${CMAKE_C_COMPILER_ID} ${CMAKE_C_COMPILER_VERSION}).")
     endif()
 else()
+    set(COMPILER_SUPPORT_SSE2 FALSE)
+    set(COMPILER_SUPPORT_AVX2 FALSE)
     # If the target system processor isn't recognized, emit a warning message to alert the user
     # that hardware-acceleration support won't be available but allow configuration to proceed.
-    message(WARNING "Unrecognized system processor ${CMAKE_SYSTEM_PROCESSOR}. Cannot determine which hardware features (${CMAKE_C_COMPILER_ID} ${CMAKE_C_COMPILER_VERSION}) supports, so hardware-accelerated implementations will not be available.")
+    message(WARNING "Unrecognized system processor ${_target_arch}. Cannot determine which hardware features (${CMAKE_C_COMPILER_ID} ${CMAKE_C_COMPILER_VERSION}) supports, so hardware-accelerated implementations will not be available.")
 endif()
 
 # disable SSE2 if specified (useful for cross-compiling, see #236)
