libslic3r_gui_sources = [
  'GUI/AboutDialog.cpp',
  'GUI/SysInfoDialog.cpp',
  'GUI/KBShortcutsDialog.cpp',
  'GUI/AppConfig.cpp',
  'GUI/BackgroundSlicingProcess.cpp',
  'GUI/BitmapCache.cpp',
  'GUI/ConfigSnapshotDialog.cpp',
  'GUI/3DScene.cpp',
  'GUI/GLShader.cpp',
  'GUI/GLCanvas3D.cpp',
  'GUI/GLCanvas3DManager.cpp',
  'GUI/Selection.cpp',
  'GUI/Gizmos/GLGizmosManager.cpp',
  'GUI/Gizmos/GLGizmoBase.cpp',
  'GUI/Gizmos/GLGizmoMove.cpp',
  'GUI/Gizmos/GLGizmoRotate.cpp',
  'GUI/Gizmos/GLGizmoScale.cpp',
  'GUI/Gizmos/GLGizmoSlaSupports.cpp',
  'GUI/Gizmos/GLGizmoFlatten.cpp',
  'GUI/Gizmos/GLGizmoCut.cpp',
  'GUI/GLSelectionRectangle.cpp',
  'GUI/GLTexture.cpp',
  'GUI/GLToolbar.cpp',
  'GUI/Preferences.cpp',
  'GUI/Preset.cpp',
  'GUI/PresetBundle.cpp',
  'GUI/PresetHints.cpp',
  'GUI/GUI.cpp',
  'GUI/GUI_Preview.cpp',
  'GUI/GUI_App.cpp',
  'GUI/GUI_Utils.cpp',
  'GUI/I18N.cpp',
  'GUI/MainFrame.cpp',
  'GUI/Plater.cpp',
  'GUI/GUI_ObjectList.cpp',
  'GUI/GUI_ObjectManipulation.cpp',
  'GUI/GUI_ObjectSettings.cpp',
  'GUI/LambdaObjectDialog.cpp',
  'GUI/Tab.cpp',
  'GUI/Field.cpp',
  'GUI/OptionsGroup.cpp',
  'GUI/BedShapeDialog.cpp',
  'GUI/2DBed.cpp',
  'GUI/3DBed.cpp',
  'GUI/Camera.cpp',
  'GUI/wxExtensions.cpp',
  'GUI/WipeTowerDialog.cpp',
  'GUI/RammingChart.cpp',
  'GUI/BonjourDialog.cpp',
  'GUI/ButtonsDescription.cpp',
  'GUI/ImGuiWrapper.cpp',
  'Config/Snapshot.cpp',
  'Config/Version.cpp',
  'Utils/ASCIIFolding.cpp',
  'Utils/Serial.cpp',
  'GUI/ConfigWizard.cpp',
  'GUI/MsgDialog.cpp',
  'GUI/UpdateDialogs.cpp',
  'GUI/FirmwareDialog.cpp',
  'GUI/ProgressStatusBar.cpp',
  'GUI/PrintHostDialogs.cpp',
  'Utils/Http.cpp',
  'Utils/FixModelByWin10.cpp',
  'Utils/OctoPrint.cpp',
  'Utils/Duet.cpp',
  'Utils/PrintHost.cpp',
  'Utils/Bonjour.cpp',
  'Utils/PresetUpdater.cpp',
  'Utils/Time.cpp',
  'Utils/HexFile.cpp',
]

if on_appleos
  slic3r_gui_sources += [
    'Utils/MacDarkMode.mm',
    'Utils/RetinaHelperImpl.mm',
  ]
endif


libslic3r_gui = static_library('slic3r_gui',
  libslic3r_gui_sources,

  include_directories: [
    srcInclude,
    polypartitionInclude,
  ],

  link_with: [
    imgui,
  ],
  dependencies: [
    wxwidgets,
    eigen,
    libnest2d,
    clipper,
    glew,
    avrdude,
  ],

  cpp_pch: 'pch/pchheader.hpp',
)
